package com.example.UI.impl;import com.example.UI.RootOperate;import com.example.Utils.PictureUtils;import com.example.Utils.SpringUtils;import com.example.service.RootService;import org.springframework.context.ApplicationContext;import javax.swing.*;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.WindowAdapter;import java.awt.event.WindowEvent;//管理员操作UI/** * 可待优化： * 1.管理员用户操作完成之后，弹出反馈对话框 * 2.清除冗余代码 * 3.代码健壮性，如：添加图片未找到、删除的商品不存在等情况 */public class RootOperateImpl implements RootOperate {    /**     * @Todo5     * 管理员操作UI     */    @Override    public void operator() {        JFrame op = new JFrame("管理员操作");        op.setSize(300,400);        op.setLocationRelativeTo(null);        op.setVisible(true);        op.setResizable(false);        op.setLayout(null);        op.addWindowListener(new WindowAdapter() {            @Override            public void windowClosing(WindowEvent windowEvent) {                new MainPageImpl().show();            }        });        //添加商品按钮        JButton addGoodsButton = new JButton("添加商品");        addGoodsButton.setSize(100,30);        addGoodsButton.setLocation(90,60);        //删除商品按钮        JButton deleteGoodsButton=new JButton("删除商品");        deleteGoodsButton.setSize(100,30);        deleteGoodsButton.setLocation(90,120);        //修改商品信息按钮        JButton updateGoodsButton=new JButton("更改商品");        updateGoodsButton.setSize(100,30);        updateGoodsButton.setLocation(90,180);        //修改商品图片按钮        JButton updatePicButton=new JButton("更改图片");        updatePicButton.setSize(100,30);        updatePicButton.setLocation(90,240);        op.add(addGoodsButton);        op.add(deleteGoodsButton);        op.add(updateGoodsButton);        op.add(updatePicButton);        //添加商品点击事件        addGoodsButton.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent actionEvent) {                op.dispose();                new AddGoods().add();            }        });        //删除商品点击事件        deleteGoodsButton.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                op.dispose();                new DeleteGoods().delete();            }        });        //更改商品信息点击事件        updateGoodsButton.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                op.dispose();                new UpdateGoods().update();            }        });        //更改商品图片点击事件        updatePicButton.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                op.dispose();                new UpdateGoodPic().updatePic();            }        });    }} class AddGoods{    private ApplicationContext context= SpringUtils.getContext();    private RootService rootService;    void add(){        JFrame addFrame = new JFrame("添加商品");        addFrame.setSize(300,400);        addFrame.setLocationRelativeTo(null);        addFrame.setVisible(true);        addFrame.setResizable(false);        addFrame.setLayout(null);        addFrame.addWindowListener(new WindowAdapter() {            @Override            public void windowClosing(WindowEvent windowEvent) {                new RootOperateImpl().operator();            }        });        JLabel goodName = new JLabel("商品名称");        goodName.setBounds(50,50,120,50);        addFrame.add(goodName);        JLabel goodNum = new JLabel("商品数量");        goodNum.setBounds(50,120,120,50);        addFrame.add(goodNum);        JLabel goodPrice = new JLabel("商品价格");        goodPrice.setBounds(50,190,120,50);        addFrame.add(goodPrice);        JLabel goodPic=new JLabel("图片路径");        goodPic.setBounds(50,260,120,50);        addFrame.add(goodPic);        //商品名称        JTextField goodNameText = new JTextField();        goodNameText.setBounds(130,60,120,30);        addFrame.add(goodNameText);        //商品数量        JTextField goodNumText = new JTextField();        goodNumText.setBounds(130,130,120,30);        addFrame.add(goodNumText);        //商品价格        JTextField goodPriceText = new JTextField();        goodPriceText.setBounds(130,200,120,30);        addFrame.add(goodPriceText);        //商品图片路径        JTextField goodPicText=new JTextField();        goodPicText.setBounds(130,270,120,30);        addFrame.add(goodPicText);        //商品添加按钮        JButton add = new JButton("添加");        add.setBounds(60,320,70,30);        addFrame.add(add);        add.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent actionEvent) {                //商品添加点击事件                String name=goodNameText.getText();                String numStr=goodNumText.getText();                String priceStr=goodPriceText.getText();                int num=Integer.parseInt(numStr);                double price=Double.parseDouble(priceStr);                byte[] goodPic= PictureUtils.getPicture(goodPicText.getText());                rootService= (RootService) context.getBean("RootServiceImpl");                rootService.addGoods(name,num,price,goodPic);                JOptionPane.showMessageDialog(null,"添加成功","提示",JOptionPane.PLAIN_MESSAGE);            }        });        //返回按钮        JButton cancel = new JButton("返回");        cancel.setBounds(170,320,70,30);        addFrame.add(cancel);        cancel.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent actionEvent) {                addFrame.dispose();                new RootOperateImpl().operator();            }        });    }}//删除商品class DeleteGoods {    private ApplicationContext context = SpringUtils.getContext();    private RootService rootService;    void delete() {        JFrame deleteFrame = new JFrame("删除商品");        deleteFrame.setSize(300, 400);        deleteFrame.setLocationRelativeTo(null);        deleteFrame.setVisible(true);        deleteFrame.setResizable(false);        deleteFrame.setLayout(null);        deleteFrame.addWindowListener(new WindowAdapter() {            @Override            public void windowClosing(WindowEvent windowEvent) {                new RootOperateImpl().operator();            }        });        JLabel goodId = new JLabel("商品Id");        goodId.setBounds(50, 50, 120, 50);        deleteFrame.add(goodId);        //商品Id        JTextField goodIdText = new JTextField();        goodIdText.setBounds(130, 60, 120, 30);        deleteFrame.add(goodIdText);        JButton add = new JButton("删除");        add.setBounds(60, 320, 70, 30);        deleteFrame.add(add);        add.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent actionEvent) {                //商品删除点击事件                int id=Integer.parseInt(goodIdText.getText());                rootService = (RootService) context.getBean("RootServiceImpl");                rootService.deleteGoods(id);                JOptionPane.showMessageDialog(null,"删除成功","提示",JOptionPane.PLAIN_MESSAGE);            }        });        //返回按钮        JButton cancel = new JButton("返回");        cancel.setBounds(170, 320, 70, 30);        deleteFrame.add(cancel);        cancel.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent actionEvent) {                deleteFrame.dispose();                new RootOperateImpl().operator();            }        });    }}//更改商品信息class UpdateGoods {    private ApplicationContext context = SpringUtils.getContext();    private RootService rootService;    void update() {        JFrame updateFrame = new JFrame("更改商品");        updateFrame.setSize(300, 400);        updateFrame.setLocationRelativeTo(null);        updateFrame.setVisible(true);        updateFrame.setResizable(false);        updateFrame.setLayout(null);        updateFrame.addWindowListener(new WindowAdapter() {            @Override            public void windowClosing(WindowEvent windowEvent) {                new RootOperateImpl().operator();            }        });        JLabel goodId = new JLabel("商品Id");        goodId.setBounds(50, 50, 120, 50);        updateFrame.add(goodId);        JLabel goodName = new JLabel("商品名称");        goodName.setBounds(50,120,120,50);        updateFrame.add(goodName);        JLabel goodNum = new JLabel("商品数量");        goodNum.setBounds(50,190,120,50);        updateFrame.add(goodNum);        JLabel goodPrice = new JLabel("商品价格");        goodPrice.setBounds(50,260,120,50);        updateFrame.add(goodPrice);        //商品ID        JTextField goodIdText = new JTextField();        goodIdText.setBounds(130, 60, 120, 30);        updateFrame.add(goodIdText);        //商品名称        JTextField goodNameText = new JTextField();        goodNameText.setBounds(130,130,120,30);        updateFrame.add(goodNameText);        //商品数量        JTextField goodNumText = new JTextField();        goodNumText.setBounds(130,200,120,30);        updateFrame.add(goodNumText);        //商品价格        JTextField goodPriceText = new JTextField();        goodPriceText.setBounds(130,270,120,30);        updateFrame.add(goodPriceText);        JButton update = new JButton("更改");        update.setBounds(60, 320, 70, 30);        updateFrame.add(update);        update.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent actionEvent) {                //商品信息更改点击事件                int id=Integer.parseInt(goodIdText.getText());                String goodName=goodNameText.getText();                int account=Integer.parseInt(goodNumText.getText());                double goodPrice=Double.parseDouble(goodPriceText.getText());                rootService = (RootService) context.getBean("RootServiceImpl");                rootService.updateGoods(id,goodName,account,goodPrice);                JOptionPane.showMessageDialog(null,"修改成功","提示",JOptionPane.PLAIN_MESSAGE);            }        });        //返回按钮        JButton cancel = new JButton("返回");        cancel.setBounds(170, 320, 70, 30);        updateFrame.add(cancel);        cancel.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent actionEvent) {                updateFrame.dispose();                new RootOperateImpl().operator();            }        });    }}//更改商品图片class UpdateGoodPic {    private ApplicationContext context = SpringUtils.getContext();    private RootService rootService;    void updatePic() {        JFrame updateFrame = new JFrame("更改图片");        updateFrame.setSize(300, 400);        updateFrame.setLocationRelativeTo(null);        updateFrame.setVisible(true);        updateFrame.setResizable(false);        updateFrame.setLayout(null);        updateFrame.addWindowListener(new WindowAdapter() {            @Override            public void windowClosing(WindowEvent windowEvent) {                new RootOperateImpl().operator();            }        });        JLabel goodId = new JLabel("商品Id");        goodId.setBounds(50, 50, 120, 50);        updateFrame.add(goodId);        JLabel goodPic=new JLabel("图片地址");        goodPic.setBounds(50,120,120,50);        updateFrame.add(goodPic);        //商品Id        JTextField goodIdText = new JTextField();        goodIdText.setBounds(130, 60, 120, 30);        updateFrame.add(goodIdText);        //商品图片地址        JTextField goodPicText=new JTextField();        goodPicText.setBounds(130,130,120,30);        updateFrame.add(goodPicText);        JButton updateButton = new JButton("更改");        updateButton.setBounds(60, 320, 70, 30);        updateFrame.add(updateButton);        updateButton.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent actionEvent) {                //商品图片修改点击事件                int id=Integer.parseInt(goodIdText.getText());                byte[] pic=PictureUtils.getPicture(goodPicText.getText());                rootService = (RootService) context.getBean("RootServiceImpl");                rootService.updateGoodPicture(id,pic);                JOptionPane.showMessageDialog(null,"修改成功","提示",JOptionPane.PLAIN_MESSAGE);            }        });        //返回按钮        JButton cancel = new JButton("返回");        cancel.setBounds(170, 320, 70, 30);        updateFrame.add(cancel);        cancel.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent actionEvent) {                updateFrame.dispose();                new RootOperateImpl().operator();            }        });    }}